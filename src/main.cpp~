#include <iostream>

#include <nlohmann/json.hpp>
#include <fstream>

#include "../include/utils_json.h"





int main(int argc, char *argv[])
{

    cinema::Dispatcher dispatcher_move;
    // dispatcher_move.create_film_base(cinema::film_database,"test.json");
    dispatcher_move.load_base_from_json("test.json");
    dispatcher_move.get_name_moves();
    dispatcher_move.get_move_actor("Yriy Yachovle");


    return 0;
}



    // nlohmann::json j = cinema::create_film_base(cinema::film_database,"test.json");

    // cinema::film_date base_film = j;

    // std::cout<<base_film.actors[0].name<<std::endl;

    // for(nlohmann::json::iterator it = j.begin(); it != j.end(); ++it)
    // {
    //     // std::cout<<std::setw(4)<<it.key()<<std::endl;
    //     // if(it.key() == "test3")
    //     // {
    //     //     std::cout<<it.value().at("country")<<std::endl;
    //     // }

    //     if(it.value().at("actors").at(0).at("name") == "Yriy" || it.value().at("actors").at(0).at("surname") == "Yachovlev")
    //     {
    //         std::cout<<it.key()<<std::endl;
    //     }
        
    // }



    // for(auto& element : j.items())
    // {
    //     if(j.contains("test3"))
    //     {
    //         std::cout<<element.key()<<std::endl;
    //     }
    // }


    // cinema::film_date film =
    //     {
    //         "Ivan Vasilyevich changes profession",
    //         "USSR",
    //         "1973",
    //         "Mosfilm",
    //         "Vladlen Bachnov",
    //         "Leonid Gayday",
    //         "Goschino",
    //         {
    //             {"Tsar Ivan Vasilyevich Grozniy"},
    //             {"Georges Miloslavsky"},
    //             {"Shurik"}
    //         },
    //         {
    //             {"Tsar - Yriy Yachovlev"},
    //             {"Georges Miloslavsky - Leonid Kyravlev"},
    //             {"Shurik - Alecsandr Demianenko"}
    //         },            
    //     };

    
    // nlohmann::json j_film = film;

    // out<<std::setw(4) << j_film;

    // out.close();


    // std::cout<<"Read json from file"<<std::endl;

    // std::ifstream in("test.json");

    // nlohmann::json from_file = nlohmann::json::parse(in);

    // std::cout << std::setw(4)<< from_file << std::endl;

    // cinema::film_date film_from_file = from_file.get<cinema::film_date>();
    
    // std::cout<<film_from_file.actor.main_role<<std::endl;






    // for(nlohmann::json::iterator it = j_film.begin(); it != j_film.end(); ++it)
    // {
    //     std::cout<<std::setw(4)<<it.key()<<":"<<it.value() <<std::endl;
    // }


    // nlohmann::json film_date = cinema::json_for_film_date();
        // {
        //     {"name","none"},
        //     {"country", "none"},
        //     {"date", "none"},
        //     {"studia", "none"},
        //     {"scenarist", "none"},
        //     {"director", "none"},
        //     {"producer", "none"},
        //     {"personage",{
        //             {"first personage", "none"},
        //             {"second personage", "none"},
        //             {"therd personage", "none"},
        //         }},
        //     {"actors", {
        //             {"main role", "none"},
        //             {"two role", "none"},
        //             {"three role", "none"},
        //         }}
        // };


    // std::cout << std::setw(4)<< film_date << std::endl;




    // nlohmann::json j;
    // j.push_back("foo");
    // j.push_back(1);
    // j.push_back(true);
    
    // std::cout<<std::setw(4)<< j<<std::endl;




// using json = nlohmann::json;

// namespace ns
// {
// // a simple struct to model a person
// struct person
// {
//     std::string name;
//     std::string address;
//     int age;
// };
// } // namespace ns

// namespace ns
// {
//     void to_json(json& j, const person& p)
//     {
//         j = json{ {"name", p.name}, {"address", p.address}, {"age", p.age} };
//     }
// } // namespace ns




// nlohmann::json j_list = nlohmann::json::array({{"one",1},{"two",2}});
// std::cout<<j_list<<std::endl;

    
// ns::person p = {"Ned Flanders", "744 Evergreen Terrace", 60};

// json a = p;



//     nlohmann::json j2 = R"(
//   {
//     "happy": true,
//     "pi": 3.141
//   }
// )"_json;

    
    // nlohmann::json j3 = {
    //     {"pi", 3.141},
    //     {"happy", true},
    //     {"name", "Niels"},
    //     {"nothing", nullptr},
    //     {"answer", {
    //             {"everything", 42}
    //         }},
    //     {"list", {1, 0, 2}},
    //     {"object", {
    //             {"currency", "USD"},
    //             {"value", 42.99}
    //         }},
    //     // nlohmann::json::array({{"one",1},{"two",2}})
    // };
